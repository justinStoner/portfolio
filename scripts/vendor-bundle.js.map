{"version":3,"sources":["lib/template/scrim.template.js","lib/js/events.js","lib/js/index.js","src/translations/calendar.en.js","src/helper.js"],"names":["styles","module","exports","e","define","amd","f","window","global","self","Promise","t","n","r","s","o","u","a","_dereq_","i","Error","code","l","call","length","1","Events","shift","fn","_settlePromises","prototype","_drainQueues","this","forEach","_events","Async","./schedule","./util","2","eventName","context","bindingPromise","_then","rejectThis","bind","thisArg","scope","func","off","_setBoundTo","maybePromise","prefix","defaults","undefined","ret","_setOnCancel","obj","_bitField","value","body","old","bluebird","DateTimePicker","PromiseArray","apiRejection","debug","Object","assign","cancel","options","_warn","promise","event","_followee","CustomEvent","onData","rome","container","_setWillBeCancelled","scrimEl","_cancelBy","querySelector","pmToggleEl","_cancelBranched","setDate","setTime","_listenForCloseEvents","_stopListeningForCloseEvents","pickerEl","remove","_isCancelled","trigger","isCancelled","onCancelCallback","internalOnly","delegateEvents","requestAnimationFrame","classList","_onWindowKeypress","_onCancel","close","_doInvokeOnCancel","addEventListener","_closeHandler","clickCancel","instances","boundTo","_boundValue","item","showMinuteClock","mouseOutHourClock","tryCatch","cb","matchesPredicate","errorObj","mouseInHourClock","keys","getKeys","mouseOutMinuteClock","j","key","predicateLoop","NEXT_FILTER","util","catchFilter","6","Context","CapturedTrace","clickShowCalendar","_promiseCreated","_pushContext","_popContext","_peekContext","push","_trace","create","createContext","Promise_popContext","newValue","Promise_PeekContext","number","parseInt","currentTarget","dateString","moment","name","amToggleEl","_getDomain","_async","$","hideHand","env","_ensurePossibleRejectionHandled","unhandledRejectionHandled","meridiem","possiblyUnhandledRejection","reason","clickShowClock","_unsetUnhandledRejectionIsNotified","_setRejectionIsUnhandled","add","_notifyUnhandledRejectionIsHandled","domainBind","domain","silent","evts","_captureStackTrace","date","month","_attachExtraTrace","Promise_captureStackTrace","Promise_attachExtraTrace","config","el","longStackTracesCaptureStackTrace","disableTrampolineIfNecessary","longStackTracesIsSupported","dispatchEvent","domEvent","day","Event","dayOfWeek","format","year","m","innerText","toLowerCase","cancelable","time","minutes","hour","oldActiveHours","oldActiveMinutes","process","emit","arguments","method","apply","slice","clockNum","generatePromiseLifecycleEventObject","child","querySelectorAll","selector","els","globalEventFired","parent","template","appendChild","throwLater","async","infoBase","hourSplit"],"mappings":"kwKACcA,UADC,mBAAAC,QAAAA,OAAAC,QAAAC,QAAA,IAAA,kBAAAC,SAAAA,OAAAC,IAAAD,UAAAD,OAAA,CAAA,GAAAG,EAAA,oBAAAC,QAAAD,EAAAC,OAAA,mBAAAC,QAAAF,EAAAE,OAAA,mBAAAC,QAAAH,EAAAG,MAAAH,EAAAI,QAAAP,MAAA,WAAA,GAAAC,GAAAH,EAAAC,CAAA,OAAA,SAAAC,GAAAQ,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAT,GAAA,GAAAc,OAAA,uBAAAL,EAAA,IAAA,MAAAT,GAAAe,KAAA,mBAAAf,EAAA,GAAAgB,GAAAV,EAAAG,IAAAb,WAAAS,GAAAI,GAAA,GAAAQ,KAAAD,EAAApB,QAAA,SAAAC,GAAA,GAAAS,GAAAD,EAAAI,GAAA,GAAAZ,EAAA,OAAAW,GAAAF,GAAAT,IAAAmB,EAAAA,EAAApB,QAAAC,EAAAQ,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAb,QAAA,IAAA,GAAAiB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAC,08DCGMwB,GAAAA,GAAAA,EAAAA,YACLC,wBAJhBC,GAAAC,sBAKIC,UAAAC,aAAA,mNAQeC,KAAKC,+DAGTC,aACPC,yCAKG,GAAAC,aAAP,GAAAC,SAAA,KAAAC,GAAA,SAAApB,EAAAjB,EAAAC,gEAGCqC,EAAAA,gBACSL,MACmB,SAAA/B,EAAAqC,6BAGX,IAHlBC,eAAAC,MAAAC,EAAAA,EAAA,KAAAX,KAAA7B,wEAQEoC,EAAWX,2BAKRM,wBAA0BA,KAAQK,QAAbpC,gBAC1ByC,KAAA,SAAAC,6EAGGN,YAAeO,EAAAA,mCACZC,GAAOrC,GAAPqC,oBACWR,KAAAA,SACVS,KAAIT,eAFXU,YAAAC,eAI0BH,GAAMD,+FCtC9BK,EAAST,MACTU,EAAAA,MAAWC,GAAAC,EAAAd,KAAOe,aAAAL,oDAONC,YAAd,SAHMK,OAIGL,uBAJH,QAKNnB,KAAAyB,wBACgBN,mBAEhB,QAAAnB,KAAAyB,uBAIaN,SAAb,iBAZM,WAaN,aAAUA,4BAGVN,EAAAa,oBACAA,GAAAd,KAAAC,sBAIaM,EAAblD,EAAAC,2CAKkByD,IA9BEjD,QAAAkD,2BAAA,+BAAAA,EAAAlD,YAAxBmD,GAAA3C,EAAA,gCAmCM4C,QAAAA,+DACsB,SAAApD,EAAAqD,EAAAC,EAAAC,sEAGTC,MAAOC,EAAOf,UAAdgB,OAAA,iBACVC,eAAiBrE,MAAtBgC,MAAAsC,MAAA,6CAGAC,EACMA,EAAKF,kBAAY,sCAGbG,EAAQC,YAAIC,2JAShBC,OAECC,EAAKC,gBAAWN,EAAAE,YAAAL,WACbU,wBADaP,+HASlB,sBACLlB,KAAM0B,KAAAA,6DACN,eAGAC,UAAwBrB,SAAKsB,cAC7BjD,WACKkD,2BAAoB,0BAEpB,sGAALpD,UAWOqD,gBAAA,gBACAC,qCACAC,uBAIFC,QAAAA,iIAKC,gBACDC,UAAAA,GAAAA,KAAAA,iIAKAC,MAAAA,cAAmBC,KAAOC,4BAGpB/B,cAAiB,uBACrBgC,cAAL3D,KAAA4D,6HAKIC,EAAA1E,GAAA2E,yBACN,kBAAKC,8CAGEC,KAAAA,IACAjB,KAAQkB,kBAAiB9F,EAAKkE,GAC9BmB,EAASS,WAAd9F,EAA+BgD,iFAO5B+C,KAAoBC,2CAEhBC,KAALC,kBAAArE,KAAA6D,wDAIGS,mGAKFC,iBAAL,qFAKmC,SAAKC,cAIjCC,EAAkBH,EAAAA,mBAA+BnG,GAAxD,GAA+EuG,GAA/EnC,EAAAoC,gBACO,IAAA,GAAPxF,GAA2BmF,EAAAA,EAAAA,EAAiB9E,SAASL,EAAA,IAAKyF,GAAKC,EAAAA,iBAExD,MAAAD,GAAmBN,EAAAA,oBAAiBlF,QAAmB,GAAAjB,YAAK2G,GAAnE,MAAAC,GAAAC,GAAAzF,KAAAmF,EAAAvG,OAEKmG,IAA0B,kBAATM,GAAS,IAAKK,GAAoB9G,EAAG0G,GAAAA,KAA5BH,EAAAvG,EAA7B,IAAA8G,IAAAC,EACGZ,MAAHW,EAAuC,IAAKE,EAA5C,MAAAJ,GAAAC,GAAAzF,KAAAmF,EAAAvG,0BAG8D,IAAA,GAAzDiH,GAAAC,EAAqBf,GAAyCgB,EAAAA,EAAAA,EAAAA,EAAL9F,SAAL+F,EAAA,CAA3D,GAAAC,GAAAJ,EAAAG,EACA,IAAAX,EAAAY,IAA6BrH,EAAAqH,GACxBlB,QAAiBmB,GACjBnB,MAAAA,GAAiBU,GAAAzF,KAApBmF,EAAkCvG,IAFpC,MAAAuH,UAduDxG,EADvD,YAEOA,EAAP,SACGoF,OAAgCqB,EAAAZ,WADnCY,EAAAT,eAkBAU,cAGmD,GADnDvF,SAAA,KAAAwF,GAAA,SAAA3G,EAAAjB,EAAAC,0BAGO,SAAAQ,4BAOA,GAAAoH,GAAPC,cACGzB,uBAcH,MAAA,IAAAwB,4DArBuCE,0BAELC,gBAAKD,eADvClG,UAAAoG,aAAA,yBAEOC,YACJ7B,WAAAA,MAAiB,sBAAmB0B,EAAAA,UAALI,aAAL,eAE7BtG,UAAAoG,aAAA,uCAGKnD,OAAQuB,gBAAiB,OAAe+B,KAAKjC,KAAXkC,iHAMlClC,gBAAL,KACKT,+BAcH,OADF4C,OAEWC,8BACT,mFAGF9H,EAAAoB,UAAAqG,cACAzH,EAAA0H,eACA1H,EAAAoB,UAAAsG,qIAGkBK,IACZC,aAAkBC,IACpBC,UAASC,aAAWC,mCAERF,MAEhB,0KAGWG,cACLL,GAAAA,KAAWM,iJA2LWC,EAAA1E,kBACrB2E,46IAxLER,EAATS,eACAC,+HAOSnD,wFAKM,GAAA0B,EAAK0B,IAAL,2FAOG,6CACZC,EAAWC,IAAA,iCAEH,GAAA5B,EAAA4B,IAAA,sCACHtD,EAAAA,IAAUR,6JAOrB+D,gCAAc,WACc,IAA1B,oKAIM,aACSR,mBACWS,MAAApG,GAAArB,sEAI5B,UAAS0G,KAATjF,0GAMSiG,0BAAmB,mBACrBA,wBAAL,OACA1H,KAAc0G,0DAEhB,qBACAiB,EAAAC,EAAA5H,qDAGc,0BACd,OAAK6H,KAALpG,uBAGOqG,mCAAP,2BAC2B7D,OAApBjE,KAAAyB,8FAGS,eAGTsG,yBAA+BC,0BACb/D,QAAlBjE,KAAAyB,gJAKAqG,0CACAG,yEAGQ,kBACf,QAAAjI,KAAOyB,WAAP,2FAM8B,SAA9B7B,6CAGIA,EAAA+F,EAAAuC,WAAAC,EAAAvI,OACJyB,0HAMW+G,+BAAuB,4DACxBpB,IAAAA,OAAOtF,sIAGX2G,GAAN3J,EAAAoB,UAAAwI,mBACMC,EAAW7J,EACV8J,UAAFC,qBAGErF,iBAAL,IACA,+KAMAtD,UAAAwI,mBAAAI,IACU5I,UAAA2I,kBAAVE,qDAGEC,GAAKvG,iBAAY,KAEfvC,UAAa+I,mBAAjBC,oCAEOzG,4BAFP0G,uEAQEV,IAAK7I,iBAATwJ,gNAUUhC,QAAOuB,EAAjB/J,OAAAyK,cAAAC,IAEMC,GAAN,kBAAqBC,OAArB,CACMC,GAAAA,GAAcC,GAAAA,OAAO,qBACrBC,GAAOC,OAAEF,cAAf9G,iBAEO,GAAA0G,GAAWO,GAAlBL,OAA8BC,EAA9BK,eACOC,YAAkBF,GAGzB,OADAP,GAAkBK,OAAlB/G,GACiBgH,EAAEhB,OAAnBS,cAAAC,0OAOMU,OAAMX,cAAAC,UAGVW,6BAEIC,QAIAC,oBACAC,kBAEN,MAAOC,SAAAC,KAAkBT,MAAAA,QAAzBU,YAGIJ,EAAAA,2DAQJ,SAAAK,IAEAA,EAAAC,MAAA1E,EAAAnH,UAA6B8L,MAAKjI,KAAQrE,UAAOuM,mDAY1CC,mBACAtH,kBACAgE,kBACAhE,mBACAgE,wCAEA3E,QAAPA,EAAAkI,MAAAA,gEAIiBjH,SAASkH,EAAAA,EAAiBC,UACpCC,OAAAhD,EAAArF,QAAAA,uCAIX,GAAAsI,IAEyBC,QAEJC,EAAnBV,MAAA,KAAAF,iBACOa,KACPC,WAAA9M,gEC1bF+M,EAAU3M,WACNJ,GC8EYgN,GAAgBC","file":"vendor-bundle.js","sourceRoot":"..","sourcesContent":["export default ({ styles }) => `\n<div class=\"${styles.scrim}\"></div>\n`;\n","//\n// basic event triggering and listening\n//\nexport default class Events {\n  constructor() {\n    this._events = {\n      '*': []\n    };\n  }\n\n  trigger(eventName, evtData) {\n    eventName.split(' ').forEach((evtName) => {\n      // trigger a global event event\n      this._events['*'].forEach(evt => evt.fn.call(evt.scope, evtName, evtData));\n      // if there are any listeners to this event\n      // then fire their handlers\n      if (this._events[evtName]) {\n        this._events[evtName].forEach((evt) => {\n          evt.fn.call(evt.scope, evtData);\n        });\n      }\n    });\n    return this;\n  }\n\n  on(eventName, fn, scope) {\n    if (!this._events[eventName]) this._events[eventName] = [];\n    this._events[eventName].push({\n      eventName,\n      fn,\n      scope: scope || this\n    });\n    return this;\n  }\n\n  off(eventName, fn) {\n    if (!this._events[eventName]) return this;\n    if (!fn) {\n      this._events[eventName] = [];\n    }\n    this._events[eventName] = this._events[eventName].filter(evt => evt.fn !== fn);\n    return this;\n  }\n\n  once(eventName, fn, scope) {\n    const func = () => {\n      fn.call(scope, eventName, fn, scope);\n      this.off(eventName, func);\n    };\n    return this.on(eventName, func, scope);\n  }\n}\n","import rome from 'rome';\nimport moment from 'moment';\n\nimport popupTemplate from '../template/datepicker.template';\nimport scrimTemplate from '../template/scrim.template';\nimport Events from './events';\n\nimport '../scss/material-datetime-picker.scss';\n\nconst ESC_KEY = 27;\n\nconst prefix = 'c-datepicker';\nconst defaults = () => ({\n  default: moment().startOf('hour'),\n  // allow the user to override all the classes\n  // used for styling the calendar\n  styles: {\n    scrim: 'c-scrim',\n    back: `${prefix}__back`,\n    container: `${prefix}__calendar`,\n    date: `${prefix}__date`,\n    dayBody: `${prefix}__days-body`,\n    dayBodyElem: `${prefix}__day-body`,\n    dayConcealed: `${prefix}__day--concealed`,\n    dayDisabled: `${prefix}__day--disabled`,\n    dayHead: `${prefix}__days-head`,\n    dayHeadElem: `${prefix}__day-head`,\n    dayRow: `${prefix}__days-row`,\n    dayTable: `${prefix}__days`,\n    month: `${prefix}__month`,\n    next: `${prefix}__next`,\n    positioned: `${prefix}--fixed`,\n    selectedDay: `${prefix}__day--selected`,\n    selectedTime: `${prefix}__time--selected`,\n    time: `${prefix}__time`,\n    timeList: `${prefix}__time-list`,\n    timeOption: `${prefix}__time-option`,\n    clockNum: `${prefix}__clock__num`\n  },\n  // format to display in the input, or set on the element\n  format: 'DD/MM/YY',\n  // the container to append the picker\n  container: document.body,\n  // allow any dates\n  dateValidator: undefined\n});\n\nclass DateTimePicker extends Events {\n  constructor(options = {}) {\n    super();\n    const styles = Object.assign(defaults().styles, options.styles);\n    this.options = Object.assign(defaults(), options);\n    this.options.styles = styles;\n\n    // listen to any event\n    this.on('*', (evtName, evtData) => {\n      if (this.options.el) {\n        // if there is a custom element, fire a real dom\n        // event on that now\n        const event = new CustomEvent(evtName, this, evtData);\n        this.options.el.dispatchEvent(event);\n      }\n    });\n  }\n\n  // intialize the rom calendar with our default date and\n  // style options\n  initializeRome(container, validator) {\n    const onData = this.onChangeDate.bind(this);\n\n    return rome(container, {\n      styles: this.options.styles,\n      time: false,\n      dateValidator: validator,\n      initialValue: this.value\n    }).on('data', onData);\n  }\n\n  // called to open the picker\n  open() {\n    const scrimEl = scrimTemplate(this.options);\n    _appendTemplate(document.body, scrimEl);\n    _appendTemplate(this.options.container, popupTemplate());\n    this.pickerEl = this.options.container.querySelector(`.${prefix}`);\n    this.scrimEl = document.body.querySelector(`.${this.options.styles.scrim}`);\n    this.amToggleEl = this.$('.c-datepicker__clock--am');\n    this.pmToggleEl = this.$('.c-datepicker__clock--pm');\n\n    if (!this.value) {\n      // TODO hack\n      // set/setDate/setTime need refactoring to have single concerns\n      // (set: set the value; setDate/setTime rename to renderDate/renderTime\n      //  and deal with updating the view only).\n      // For now this allows us to set the default time using the same quantize\n      // rules as setting the date explicitly. Setting this.value meets setTime|Date's\n      // expectation that we have a value, and `0` guarantees that we will detect\n      this.value = moment(0);\n      this.setDate(this.options.default);\n      this.setTime(this.options.default);\n    } else {\n      this.setDate(this.value);\n      this.setTime(this.value);\n    }\n\n    this.initializeRome(this.$(`.${this.options.styles.container}`), this.options.dateValidator);\n    this._listenForCloseEvents();\n\n    this._show();\n  }\n\n  close() {\n    this._stopListeningForCloseEvents();\n    this._hide();\n  }\n\n  _hide() {\n    this.pickerEl.classList.remove('open');\n    window.setTimeout(() => {\n      this.options.container.removeChild(this.pickerEl);\n      document.body.removeChild(this.scrimEl);\n      this.trigger('close');\n    }, 200);\n    return this;\n  }\n\n  _show() {\n    this.delegateEvents();\n    // add the animation classes on the next animation tick\n    // so that they actually work\n    window.requestAnimationFrame(() => {\n      this.scrimEl.classList.add(`${this.options.styles.scrim}--shown`);\n      this.pickerEl.classList.add(`${prefix}--open`);\n      this.trigger('open');\n    });\n    return this;\n  }\n\n  _listenForCloseEvents() {\n    this._onWindowKeypress = (e) => {\n      if (e.which === ESC_KEY) {\n        this.close();\n      }\n    };\n\n    window.addEventListener(\"keydown\", this._onWindowKeypress);\n  }\n\n  _stopListeningForCloseEvents() {\n    window.removeEventListener(\"keydown\", this._onWindowKeypress);\n    this._closeHandler = null;\n  }\n\n  delegateEvents() {\n    this.$('.js-cancel')\n      .addEventListener('click', () => this.clickCancel(), false);\n    this.$('.js-ok')\n      .addEventListener('click', () => this.clickSubmit(), false);\n\n    this.$('.js-date-hours').addEventListener('click', e => this.showHourClock(e), false);\n    this.$('.js-date-minutes').addEventListener('click', e => this.showMinuteClock(e), false);\n\n    this.$('.js-clock-hours').addEventListener('mouseleave', e => this.mouseOutHourClock(e), false);\n    this.$(`.js-clock-hours .${this.options.styles.clockNum}`).forEach((el) => {\n      el.addEventListener('click', e => this.clickClickHour(e).showMinuteClock(), false);\n      el.addEventListener('mouseenter', e => this.mouseInHourClock(e), false);\n    });\n\n    this.$('.js-clock-minutes').addEventListener('mouseleave', e => this.mouseOutMinuteClock(e), false);\n    this.$(`.js-clock-minutes .${this.options.styles.clockNum}`).forEach(el => {\n      el.addEventListener('click', (e) => this.clickClockMinute(e), false);\n      el.addEventListener('mouseenter', e => this.mouseInMinuteClock(e), false);\n    });\n\n    this.$('.c-datepicker__clock--am')\n      .addEventListener('click', e => this.clickAm(e), false);\n    this.$('.c-datepicker__clock--pm')\n      .addEventListener('click', e => this.clickPm(e), false);\n\n    this.$('.js-show-calendar')\n      .addEventListener('click', e => this.clickShowCalendar(e), false);\n    this.$('.js-date-day')\n      .addEventListener('click', e => this.clickShowCalendar(e), false);\n    this.$('.js-date-month')\n      .addEventListener('click', e => this.clickShowCalendar(e), false);\n\n    this.$('.js-show-clock')\n      .addEventListener('click', e => this.clickShowClock(e), false);\n\n    this.scrimEl.addEventListener('click', () => this.close(), false);\n\n    return this;\n  }\n\n  clickSubmit() {\n    this.close();\n    this.trigger('submit', this.value, this);\n    return this;\n  }\n\n  clickCancel() {\n    this.close();\n    this.trigger('cancel', this.value, this);\n    return this;\n  }\n\n  clickClickHour(e) {\n    const newValue = moment(this.value);\n    let number = parseInt(e.currentTarget.getAttribute('data-number'), 10);\n    if (number === 0 && this.meridiem === 'pm') {\n      number = 12;\n    } else if (this.meridiem === 'pm') {\n      number += 12;\n    }\n\n    newValue.hour(number);\n    this.set(newValue);\n    return this;\n  }\n\n  clickClockMinute(e) {\n    const newValue = moment(this.value);\n    let number = parseInt(e.currentTarget.getAttribute('data-number'), 10);\n\n    newValue.minute(number);\n    this.set(newValue);\n    return this;\n  }\n\n  onChangeDate(dateString) {\n    const newValue = moment(this.value);\n    const [year, month, date] = dateString.split('-');\n    newValue.set({ year, month: month - 1, date });\n\n    this.set(newValue);\n    return this;\n  }\n\n  mouseInHourClock() {\n    const active = this.$(`.js-clock-hours .${this.options.styles.clockNum}--active`);\n\n    if (active) {\n      active.classList.add('hide-hand');\n    }\n  }\n\n  mouseInMinuteClock() {\n    const active = this.$(`.js-clock-minutes .${this.options.styles.clockNum}--active`);\n\n    if (active) {\n      active.classList.add('hide-hand');\n    }\n  }\n\n  mouseOutHourClock() {\n    const hideHand = this.$(`.js-clock-hours .${this.options.styles.clockNum}--active.hide-hand`);\n\n    if (hideHand) {\n      hideHand.classList.remove('hide-hand');\n    }\n  }\n\n  mouseOutMinuteClock() {\n    const hideHand = this.$(`.js-clock-minutes .${this.options.styles.clockNum}--active.hide-hand`);\n\n    if (hideHand) {\n      hideHand.classList.remove('hide-hand');\n    }\n  }\n\n  clickAm() {\n    const newValue = moment(this.value);\n    if (this.meridiem === 'pm') {\n      this.meridiem = 'am';\n      newValue.hour(newValue.hour() - 12);\n    }\n    this.set(newValue);\n    return this;\n  }\n\n  clickPm() {\n    const newValue = moment(this.value);\n    if (this.meridiem === 'am') {\n      this.meridiem = 'pm';\n      newValue.hour(newValue.hour() + 12);\n    }\n    this.set(newValue);\n    return this;\n  }\n\n  showHourClock() {\n    this.clickShowClock();\n    this.$('.js-clock-hours').classList.add('active');\n    this.$('.js-clock-minutes').classList.remove('active');\n    this.$('.js-date-hours').classList.add('active');\n    this.$('.js-date-minutes').classList.remove('active');\n  }\n\n  showMinuteClock() {\n    this.clickShowClock();\n    this.$('.js-clock-hours').classList.remove('active');\n    this.$('.js-clock-minutes').classList.add('active');\n    this.$('.js-date-hours').classList.remove('active');\n    this.$('.js-date-minutes').classList.add('active');\n  }\n\n  clickShowCalendar() {\n    this.$('.js-show-calendar').classList.add('is-selected');\n    this.$('.js-show-clock').classList.remove('is-selected');\n  }\n\n  clickShowClock() {\n    this.$('.js-show-clock').classList.add('is-selected');\n    this.$('.js-show-calendar').classList.remove('is-selected');\n  }\n\n  data(val) {\n    console.warn(`MaterialDatetimePicker#data is deprecated and will be removed in a future release. Please use get or set.`)\n    return (val ? this.set(val) : this.value);\n  }\n\n  get() {\n    return moment(this.value);\n  }\n\n  // update the picker's date/time value\n  // value: moment\n  // silent: if true, do not fire any events on change\n  set(value, { silent = false } = {}) {\n    const m = moment(value);\n\n    // maintain a list of change events to fire all at once later\n    const evts = [];\n    if (m.date() !== this.value.date()\n      || m.month() !== this.value.month()\n      || m.year() !== this.value.year()\n    ) {\n      this.setDate(m);\n      evts.push('change:date');\n    }\n\n    if (m.hour() !== this.value.hour()\n      || m.minutes() !== this.value.minutes()\n    ) {\n      this.setTime(m);\n      evts.push('change:time');\n    }\n\n    if (this.options.el) {\n      // if there is an element to fire events on\n      if (this.options.el.tagName === 'INPUT') {\n        // and it is an input element then set the value\n        this.options.el.value = m.format(this.options.format);\n      } else {\n        // or any other element set a data-value attribute\n        this.options.el.setAttribute('data-value', m.format(this.options.format));\n      }\n    }\n    if (evts.length > 0 && !silent) {\n      // fire all the events we've collected\n      this.trigger(['change', ...evts].join(' '), this.value, this);\n    }\n  }\n\n  // set the value and header elements to `date`\n  // the calendar will be updated automatically\n  // by rome when clicked\n  setDate(date) {\n    const m = moment(date);\n    const month = m.format('MMM');\n    const day = m.format('Do');\n    const dayOfWeek = m.format('dddd');\n    const year = m.format('YYYY');\n\n    this.$('.js-day').innerText = dayOfWeek;\n    this.$('.js-date-month').innerText = (`${month} ${year}`);\n    this.$('.js-date-day').innerText = day;\n    this.value.year(m.year());\n    this.value.month(m.month());\n    this.value.date(m.date());\n    return this;\n  }\n\n  // set the value and header elements to `time`\n  // also update the hands of the clock\n  setTime(time) {\n    const m = moment(time);\n    const minuteAsInt = Math.round(parseInt(m.format('mm'), 10) / 5) * 5;\n    m.minutes(minuteAsInt);\n\n    const hour = m.format('HH');\n    const minutes = m.format('mm');\n    const hourAsInt = parseInt(hour, 10) % 12;\n\n    const oldActiveHours = this.$(`.js-clock-hours .${this.options.styles.clockNum}--active`);\n    const oldActiveMinutes = this.$(`.js-clock-minutes .${this.options.styles.clockNum}--active`);\n\n    this.$('.js-date-hours').innerText = hour;\n    this.$('.js-date-minutes').innerText = minutes;\n\n    if (oldActiveHours) {\n      oldActiveHours.classList.remove(`${this.options.styles.clockNum}--active`);\n    }\n\n    if (oldActiveMinutes) {\n      oldActiveMinutes.classList.remove(`${this.options.styles.clockNum}--active`);\n    }\n\n    this.$(`.js-clock-hours .${this.options.styles.clockNum}[data-number=\"${hourAsInt}\"]`)\n      .classList.add(`${this.options.styles.clockNum}--active`);\n    this.$(`.js-clock-minutes .${this.options.styles.clockNum}[data-number=\"${minuteAsInt}\"]`)\n      .classList.add(`${this.options.styles.clockNum}--active`);\n\n    this.value.hours(m.hours());\n    this.value.minutes(m.minutes());\n    this.meridiem = this.value.format('a');\n\n    if (this.meridiem === 'pm') {\n      this.amToggleEl.removeAttribute('checked');\n      this.pmToggleEl.setAttribute('checked', 'checked');\n      this.amToggleEl.parentElement.classList.remove('c-datepicker__toggle--checked');\n      this.pmToggleEl.parentElement.classList.add('c-datepicker__toggle--checked');\n    } else {\n      this.pmToggleEl.removeAttribute('checked');\n      this.amToggleEl.setAttribute('checked', 'checked');\n      this.pmToggleEl.parentElement.classList.remove('c-datepicker__toggle--checked');\n      this.amToggleEl.parentElement.classList.add('c-datepicker__toggle--checked');\n    }\n    return this;\n  }\n\n  $(selector) {\n    const els = this.pickerEl.querySelectorAll(selector);\n    return els.length > 1 ? [...els] : els[0];\n  }\n}\n\nexport default DateTimePicker;\n\nfunction _appendTemplate(parent, template) {\n  const tempEl = document.createElement('div');\n  tempEl.innerHTML = template.trim();\n  parent.appendChild(tempEl.firstChild);\n  return this;\n}\n",null,null]}